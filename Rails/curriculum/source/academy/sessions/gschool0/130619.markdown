---
layout: page
title: Wednesday, June 19th
sidebar: true
---

## Daily Outline

* Warm-up
* Asyncronous Messaging with Pub/Sub
* Project Work

## Warm-up

Log in to [exercism.io](http://exercism.io) and start the ruby track or continue where you left off yesterday.

## Asynchronous Messaging with Pub/Sub

The content for the workshop is here: {% page_url asynchronous_messaging_with_pubsub %}

### Extracting a Service

Let's experiment with our old friend, Blogger.

#### Big Picture

We want to extract most of the comment functionality out of Blogger into it's own service. To do this:

* Comments submitted to the form should be published to a pubsub channel
* The comment service should listen for that message and record the data to the database
* The primary app can query the comment service for a given article's comments
* The primary app may need some kind of stand-in for the richer object
* Or we can fetch the comments directly from the client side with JavaScript

#### Repos

Get on the right branch of Blogger:

```bash
git clone git@github.com:JumpstartLab/blogger_advanced.git
cd blogger_advanced
git checkout --track -b pubsub origin/pubsub_work
```

* https://github.com/JumpstartLab/blogger_advanced
* https://github.com/JumpstartLab/comment_listener


#### Work Notes

* [Fetching JSON with jQuery](http://api.jquery.com/jQuery.getJSON/)
* [Using .append in jQuery](http://api.jquery.com/append/)

Iterating with jQuery:

```
jQuery.each(data_set, function(i, item) {
  alert(item);
});
```

## Project Work

Do work!
